{"version":3,"sources":["Components/moviesCard/reviews/Reviews.js"],"names":["Reviews","state","results","a","movieId","this","props","newsApi","fetchReviews","then","data","setState","length","map","result","className","author","content","Component"],"mappings":"sPAKaA,EAAb,4MACEC,MAAQ,CACNC,QAAS,IAFb,8FAKE,mCAAAC,EAAA,sDACQC,EAAUC,KAAKC,MAAMF,QAE3BG,IAAQC,aAAaJ,GAASK,MAAK,SAAAC,GACjC,EAAKC,SAAL,eAAmBD,OAJvB,gDALF,0EAaE,WAAU,IACAR,EAAYG,KAAKJ,MAAjBC,QAER,OACE,mCACGA,EAAQU,OAAS,EAChB,6BACGV,EAAQW,KAAI,SAAAC,GAAM,OACjB,+BACE,qBAAIC,UAAU,gBAAd,qBAAuCD,EAAOE,UAC9C,mBAAGD,UAAU,eAAb,SAA6BD,EAAOG,YAF7BH,EAAOE,aAOpB,+EA5BV,GAA6BE,aAuCdlB,a","file":"static/js/reviews.552cc572.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Reviews.scss';\nimport newsApi from '../../../services/ApiServices';\nimport PropTypes from 'prop-types';\n\nexport class Reviews extends Component {\n  state = {\n    results: [],\n  };\n\n  async componentDidMount() {\n    const movieId = this.props.movieId;\n\n    newsApi.fetchReviews(movieId).then(data => {\n      this.setState({ ...data });\n    });\n  }\n\n  render() {\n    const { results } = this.state;\n\n    return (\n      <>\n        {results.length > 0 ? (\n          <ul>\n            {results.map(result => (\n              <li key={result.author}>\n                <h3 className=\"title-reviews\">Author: {result.author}</h3>\n                <p className=\"text-reviews\">{result.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>We don't have any reviews forthis movie.</p>\n        )}\n      </>\n    );\n  }\n}\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Reviews;\n"],"sourceRoot":""}