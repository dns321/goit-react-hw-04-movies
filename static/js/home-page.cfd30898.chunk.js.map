{"version":3,"sources":["services/ApiServices.js","img/default-image.png","Components/moviesList/MoviesList.js","views/HomePage.js"],"names":["axios","defaults","baseURL","params","api_key","fetchMoviesDay","a","get","data","fetchMoviesPage","query","page","fetchMoviesDetail","movieId","fetchCast","fetchReviews","propTypes","PropTypes","string","isRequired","number","withRouter","films","location","className","map","film","to","apdateList","pathname","id","state","from","src","poster_path","defaultImg","alt","width","height","original_title","HomePage","newsApi","then","setState","results","this","Component"],"mappings":"iKAMAA,IAAMC,SAASC,QAFE,+BAIjBF,IAAMC,SAASE,OAAS,CACtBC,QANc,oCAShB,IAAMC,EAAc,uCAAG,8BAAAC,EAAA,+EAEIN,IAAMO,IAAN,uBAFJ,uBAEXC,EAFW,EAEXA,KAFW,kBAGZA,GAHY,yFAAH,qDAOdC,EAAe,uCAAG,mCAAAH,EAAA,6DAASI,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,KAAhB,kBAEGX,IAAMO,IAAN,gBAA2B,CAChDJ,OAAQ,CAAEO,QAAOC,UAHC,uBAEZH,EAFY,EAEZA,KAFY,kBAKbA,GALa,oGAAH,sDAWfI,EAAiB,uCAAG,WAAMC,GAAN,iBAAAP,EAAA,+EAECN,IAAMO,IAAN,iBAAoBM,IAFrB,uBAEdL,EAFc,EAEdA,KAFc,kBAGfA,GAHe,yFAAH,sDAOjBM,EAAS,uCAAG,WAAMD,GAAN,iBAAAP,EAAA,+EAESN,IAAMO,IAAN,iBAAoBM,EAApB,aAFT,uBAENL,EAFM,EAENA,KAFM,kBAGPA,GAHO,yFAAH,sDAOTO,EAAY,uCAAG,WAAMF,GAAN,iBAAAP,EAAA,+EAEMN,IAAMO,IAAN,iBAAoBM,EAApB,aAFN,uBAETL,EAFS,EAETA,KAFS,kBAGVA,GAHU,yFAAH,sDAOlBC,EAAgBO,UAAY,CAC1BN,MAAOO,IAAUC,OAAOC,WACxBR,KAAMM,IAAUG,OAAOD,YAGzBP,EAAkBI,UAAY,CAC5BH,QAASI,IAAUG,OAAOD,YAG5BL,EAAUE,UAAY,CACpBH,QAASI,IAAUG,OAAOD,YAG5BJ,EAAaC,UAAY,CACvBH,QAASI,IAAUG,OAAOD,YAGb,KACbd,iBACAI,kBACAG,oBACAE,YACAC,iB,gCCzEa,QAA0B,2C,gCCAzC,8CAkDeM,iBA5CI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAG3B,OACE,oBAAIC,UAAU,oBAAd,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACb,oBAAkBF,UAAU,mBAA5B,SACE,eAAC,IAAD,CACEG,GAAI,CACFC,WAAYL,EAASK,WACrBC,SAAS,WAAD,OAAaH,EAAKI,IAC1BC,MAAO,CACLC,KAAMT,EAASM,SACfnB,MAAOa,EAASb,QANtB,UAUE,qBACEuB,IACEP,EAAKQ,YAAL,UAlBG,uDAkBH,OAAiCR,EAAKQ,aAAgBC,IAExDC,IAAI,SACJC,MAAM,MACNC,OAAO,QAET,4BAAIZ,EAAKa,qBAnBJb,EAAKI,a,gMCRTU,EAAb,4MACET,MAAQ,CACNT,MAAO,IAFX,8FAKE,iCAAAhB,EAAA,sDACEmC,IAAQpC,iBAAiBqC,MAAK,SAAAlC,GAC5B,EAAKmC,SAAS,CAAErB,MAAOd,EAAKoC,aAFhC,2CALF,0EAWE,WAAU,IACAtB,EAAUuB,KAAKd,MAAfT,MAER,OACE,mCACE,cAAC,IAAD,CAAYA,MAAOA,UAhB3B,GAA8BwB,aAsBfN","file":"static/js/home-page.cfd30898.chunk.js","sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = '69b18394d8ba2f066276fc5ba1d70545';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nconst fetchMoviesDay = async () => {\n  try {\n    const { data } = await axios.get(`/trending/movie/day`);\n    return data;\n  } catch {}\n};\n\nconst fetchMoviesPage = async ({ query, page }) => {\n  try {\n    const { data } = await axios.get(`/search/movie`, {\n      params: { query, page },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMoviesDetail = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    return data;\n  } catch {}\n};\n\nconst fetchCast = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`);\n    return data;\n  } catch {}\n};\n\nconst fetchReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`);\n    return data;\n  } catch {}\n};\n\nfetchMoviesPage.propTypes = {\n  query: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nfetchMoviesDetail.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n\nfetchCast.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n\nfetchReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n\nexport default {\n  fetchMoviesDay,\n  fetchMoviesPage,\n  fetchMoviesDetail,\n  fetchCast,\n  fetchReviews,\n};\n","export default __webpack_public_path__ + \"static/media/default-image.5fa9fc41.png\";","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport defaultImg from '../../img/default-image.png';\n\nconst MoviesList = ({ films, location }) => {\n  const Base_url = 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2';\n\n  return (\n    <ul className=\"items-movies-list\">\n      {films.map(film => (\n        <li key={film.id} className=\"item-movies-list\">\n          <Link\n            to={{\n              apdateList: location.apdateList,\n              pathname: `/movies/${film.id}`,\n              state: {\n                from: location.pathname,\n                query: location.query,\n              },\n            }}\n          >\n            <img\n              src={\n                film.poster_path ? `${Base_url}${film.poster_path}` : defaultImg\n              }\n              alt=\"poster\"\n              width=\"200\"\n              height=\"300\"\n            />\n            <p>{film.original_title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      original_title: PropTypes.string.isRequired,\n    }),\n  ),\n  location: PropTypes.object.isRequired,\n};\n\nexport default withRouter(MoviesList);\n","import React, { Component } from 'react';\nimport MoviesList from '../Components/moviesList/MoviesList';\nimport newsApi from '../services/ApiServices';\n\nexport class HomePage extends Component {\n  state = {\n    films: [],\n  };\n\n  async componentDidMount() {\n    newsApi.fetchMoviesDay().then(data => {\n      this.setState({ films: data.results });\n    });\n  }\n\n  render() {\n    const { films } = this.state;\n\n    return (\n      <>\n        <MoviesList films={films} />\n      </>\n    );\n  }\n}\n\nexport default HomePage;\n"],"sourceRoot":""}