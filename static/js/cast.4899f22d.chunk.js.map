{"version":3,"sources":["Components/moviesCard/cast/Cast.js"],"names":["Cast","state","cast","a","movieId","this","props","newsApi","fetchCast","then","data","setState","className","length","map","actor","src","profile_path","defaultImg","alt","width","height","name","character","id","Component"],"mappings":"iSAMaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAFV,8FAKE,mCAAAC,EAAA,sDACQC,EAAUC,KAAKC,MAAMF,QAE3BG,IAAQC,UAAUJ,GAASK,MAAK,SAAAC,GAC9B,EAAKC,SAAL,eAAmBD,OAJvB,gDALF,0EAaE,WACE,IACQR,EAASG,KAAKJ,MAAdC,KAER,OACE,mCACE,oBAAIU,UAAU,aAAd,SACGV,EAAKW,OAAS,EACbX,EAAKY,KAAI,SAAAC,GAAK,OACZ,qBAAmBH,UAAU,YAA7B,UACE,qBACEI,IACED,EAAME,aAAN,UAXC,uDAWD,OACkBF,EAAME,cACpBC,IAENC,IAAI,QACJC,MAAM,MACNC,OAAO,QAET,oBAAIT,UAAU,aAAd,SAA4BG,EAAMO,OAClC,oBAAGV,UAAU,YAAb,wBAAqCG,EAAMQ,eAZpCR,EAAMS,OAgBjB,8EAtCZ,GAA0BC,aAkDXzB,a","file":"static/js/cast.4899f22d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Cast.scss';\nimport newsApi from '../../../services/ApiServices';\nimport defaultImg from '../../../img/default-image.png';\nimport PropTypes from 'prop-types';\n\nexport class Cast extends Component {\n  state = {\n    cast: [],\n  };\n\n  async componentDidMount() {\n    const movieId = this.props.movieId;\n\n    newsApi.fetchCast(movieId).then(data => {\n      this.setState({ ...data });\n    });\n  }\n\n  render() {\n    const Base_url = 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2';\n    const { cast } = this.state;\n\n    return (\n      <>\n        <ul className=\"items-cast\">\n          {cast.length > 0 ? (\n            cast.map(actor => (\n              <li key={actor.id} className=\"item-cast\">\n                <img\n                  src={\n                    actor.profile_path\n                      ? `${Base_url}${actor.profile_path}`\n                      : defaultImg\n                  }\n                  alt=\"photo\"\n                  width=\"200\"\n                  height=\"300\"\n                />\n                <h3 className=\"title-cast\">{actor.name}</h3>\n                <p className=\"text-cast\">Character: {actor.character}</p>\n              </li>\n            ))\n          ) : (\n            <p>We don't have any cast forthis movie.</p>\n          )}\n        </ul>\n      </>\n    );\n  }\n}\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Cast;\n"],"sourceRoot":""}